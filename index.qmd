---
title: "Garbage Can Regression Challenge"
format:
  html: default
execute:
  echo: false
  eval: true
---

# Garbage Can Regression Challenge

**Choose R or Python and delete the other code chunk.**

## R Code

```{r}
#| echo: false
library(tidyverse)
library(broom)

# Data with known true relationships: Anxiety = Stress + 0.1 Ã— Time
observDF <- tribble(
  ~Stress, ~StressSurvey, ~Time, ~Anxiety,
  0,0,0,0,
  0,0,1,0.1,
  0,0,1,0.1,
  1,3,1,1.1,
  1,3,1,1.1,
  1,3,1,1.1,
  2,6,2,2.2,
  2,6,2,2.2,
  2,6,2,2.2,
  8,9,2,8.2,
  8,9,2,8.2,
  8,9,2.1,8.21,
  12,12,2.2,12.22,
  12,12,2.2,12.22,
  12,12,2.2,12.22
)

observDF
```

## Your Analysis

Follow the challenge instructions from your course to complete your analysis.
Questions to Answer for 75% Grade on Challenge:

1. Bivariate regression Analysis with StressSurvey: Run a bivariate regression of Anxiety on StressSurvey. What are the estimated coefficients? How do they compare to the true relationship?

```{r}
#| label: anxiety-on-stress-survey
#| echo: false
# Bivariate regression: Anxiety on StressSurvey
model <- lm(Anxiety ~ StressSurvey, data = observDF)
summary(model)
```
The estimated coefficient for StressSurvey is 1.047, which is close to the true relationship of 1.

2. Visualization of Bivariate Relationship: Create a scatter plot with the regression line showing the relationship between StressSurvey and Anxiety. Comment on the fit and any potential issues.

```{r}
#| label: plot-anxiety-vs-stresssurvey
#| echo: false
# Scatter plot with regression line using ggplot2
ggplot(observDF, aes(x = StressSurvey, y = Anxiety)) +
  geom_point(color = "steelblue", alpha = 0.8) +
  geom_smooth(method = "lm", se = TRUE, color = "firebrick", linewidth = 1) +
  labs(
    title = "Anxiety vs Stress Survey",
    x = "Stress Survey",
    y = "Anxiety"
  ) +
  theme_minimal();'/'
```
The regression seems to follow to overall pattern of the points but leave out some outliers.

3. Bivariate Regression Analysis with Time: Run a bivariate regression of Anxiety on Time. What are the estimated coefficients? How do they compare to the true relationship?

```{r}
#| label: anxiety-on-time
#| echo: false
# Bivariate regression: Anxiety on Time
model <- lm(Anxiety ~ Time, data = observDF)
summary(model)
```
The estimated coefficient for Time is 5.341, which is far off from the true relationship of 0.1.

4. Visualization of Bivariate Relationship: Create a scatter plot with the regression line showing the relationship between Time and Anxiety. Comment on the fit and any potential issues.

```{r}
#| label: plot-anxiety-vs-time
#| echo: false
# Scatter plot with regression line using ggplot2
ggplot(observDF, aes(x = Time, y = Anxiety)) +
  geom_point(color = "steelblue", alpha = 0.8) +
  geom_smooth(method = "lm", se = TRUE, color = "firebrick", linewidth = 1) +
  labs(
    title = "Anxiety vs Time",
    x = "Time",
    y = "Anxiety"
  ) +
  theme_minimal();'/'
```
The regression seems to follow to overall pattern of the points but leaves out some outliers. The gray area shows the confidence interval range with 95% confidence. The graph with anxiety and time seems to have a larger area of confidence compared to stress survey meaning that it isn't as confident in predicting anxiety as the first graph was.

5. Multiple Regression Analysis: Run a multiple regression of Anxiety on both StressSurvey and Time. What are the estimated coefficients? How do they compare to the true relationship?

```{r}
#| label: multiple-regression
#| echo: false
# Multiple regression: Anxiety on StressSurvey and Time
model <- lm(Anxiety ~ StressSurvey + Time, data = observDF)
summary(model)
```
The estimated coefficient for StressSurvey is 1.4269, which is 0.4 off from the true relationship of 1.
The estimated coefficient for Time is -2.7799, which is far off from the true relationship of 0.1.

Questions to Answer for 85% Grade on Challenge:

6. Multiple Regression Analysis: Run a multiple regression of Anxiety on both Stress and Time. What are the estimated coefficients? How do they compare to the true relationship?

```{r}
#| label: multiple-regression-with-stress
#| echo: false
# Multiple regression: Anxiety on Stress and Time
model <- lm(Anxiety ~ Stress + Time, data = observDF)
summary(model)
```
The estimated coefficient for Stress is 1, which is the exact value of the true relationship.
The estimated coefficient for Time is 0.1, which is the exact value of the true relationship.

7. Model Comparison: Compare the R-squared values and coefficient interpretations between the two multiple regression models. Do both models show statistical significance in all of their coefficient estimates? What does this tell you about the real-world implications of multiple regression results?

R-squared values: 

For StressSurvey + Time: 0.935
For Stress + Time: 1.0

Coefficient values:

For StressSurvey + Time: 1.4269, -2.7799
For Stress + Time: 1, 0.1

P-Value:

For StressSurvey + Time: 7.538e-08
For Stress + Time: 2.2 e-16

The model with Stress + Time has an R-squared value of 1, meaning that the model is a perfect fit. This is quite suspicious, since no model is a perfect fit. Stress + Time also has a coefficient value equal to the true relationship, which goes in line with the 1.0 R-squared value. This leads me to believe that the model with Stress + Time is unreliable because it is "too good ot be true". In addition, both models show statistical significance in all of thier coefficient estimates since the p-value for both models is less than .05.

Questions to Answer for 95% Grade on Challenge:

8. Reflect on Real-World Implications: For each of the two multiple regression models, assume their rrespective outputs/conclusions were published in academic journals and then subsequently picked up by the popular press. What headline about time spent on social media and its effect on anxiety would you expect to see from a popular press outlet covering the second model? Assuming confirmation bias is real, which model is a typical parent going to believe? Which model will Facebook, Instagram, and TikTok executives prefer?

I would expect to see from the popular press a title similar to: "Research Shows That Time on Social Media Has a Direct Relationship with Anxiety and Stress!" Or even claiming that stress + time on social media causes anxiety.

Assuming confirmation bias is real, a typical parent is going to believe the second model since a typical parents already has a stigma on social media being bad.

Facebook, Instagram, and TikTok executives prefer the first multiple regression model since it shows that time on social media actually decreases anxiety, because the model had a negative estimated coefficient for time.

Questions to Answer for 100% Grade on Challenge:

9. Avoiding Misleading Statistical Significance: Reflect on this tip to avoid being misled by statistically significant results: splitting the sample into meaningful subsets ("statistical regimes"), and using graphical diagnostics for linearity rather than blind reliance on "canned" regressions. Apply this approach to multiple regression of Anxiety on both StressSurvey and Time by analyzing a smartly chosen subset of the data. What specific subset did you choose and why? Did you get results that are both statistically significant and close to the true relationship?


```{r}
#| label: multiple-regression-by-low-high-stress
#| echo: false
# Multiple regression of Anxiety on StressSurvey + Time
# Subsetted by low vs high Stress (median split)

stress_median <- median(observDF$Stress, na.rm = TRUE)
low_stress_df  <- dplyr::filter(observDF, Stress <= stress_median)
high_stress_df <- dplyr::filter(observDF, Stress >  stress_median)

model_low_stress  <- lm(Anxiety ~ StressSurvey + Time, data = low_stress_df)
model_high_stress <- lm(Anxiety ~ StressSurvey + Time, data = high_stress_df)

cat("Low Stress group (<= median) summary:\n")
print(summary(model_low_stress))
cat("\nHigh Stress group (> median) summary:\n")
print(summary(model_high_stress))

# Tidy model-level comparison
glance_tbl <- dplyr::bind_rows(
  broom::glance(model_low_stress)  %>% dplyr::mutate(group = "Low Stress (<= median)"),
  broom::glance(model_high_stress) %>% dplyr::mutate(group = "High Stress (> median)")
) %>% dplyr::select(group, r.squared, adj.r.squared, sigma, df, df.residual, p.value)

print(glance_tbl)

# Tidy coefficient comparison
coef_tbl <- dplyr::bind_rows(
  broom::tidy(model_low_stress)  %>% dplyr::mutate(group = "Low Stress (<= median)"),
  broom::tidy(model_high_stress) %>% dplyr::mutate(group = "High Stress (> median)")
) %>% dplyr::select(group, term, estimate, std.error, statistic, p.value)

print(coef_tbl)
```

The subset that I chose was splitting stress into two catergories: low and high stress using the median as the divider. I chose this because I felt like it would give a more accurate model and "balance" the results. Time in relation with low and high stress were the same as before with having the same estimate as the true relationship. However, the relationship with Stresssurvey with low and high stress changed slightly. In addition, the results all had lower than .05 p-value making them all statistically significant.